<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hang.mapper.ShopMapper">

    <insert id="insertIntoShopCategory">
        insert into yc_shop.shop_category(shop_id, category_id)
            value (#{shop_id}, #{vo.categoryId})
    </insert>
    <update id="updateStatusBatch">
        update shop
        set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
    <update id="updateShopCategoryInfo">
        update shop_category
        set category_id = #{category_id}
        where shop_id = #{shop_id}
    </update>

    <select id="getImgById" resultType="java.lang.String">
        select image
        from yc_shop.shop
        where id = #{id}
    </select>
    <select id="selectShopListAndCategoryName" resultType="com.hang.vo.ShopExistTableVo">
        SELECT s.id,
               s.name,
               s.price,
               s.sales,
               s.inventory,
               s.image,
               s.star,
               c.name as categoryName,
               s.describle,
               s.status,
               s.create_time,
               s.update_time
        FROM shop s
                 LEFT JOIN shop_category sc ON s.id = sc.shop_id
                 LEFT JOIN category c ON c.id = sc.category_id
        <where>
            <if test="category_id != null and category_id != '' ">
                and c.id = #{category_id}
            </if>
            and s.del_flag = 0
        </where>
        ORDER BY s.id
        LIMIT #{pageNum},#{pageSize}
    </select>
    <select id="selectShopByCategoryId" resultType="com.hang.vo.ShopExistTableVo">
        SELECT s.id,
               s.name,
               s.price,
               s.sales,
               s.star,
               s.inventory,
               s.image,
               c.name as categoryName,
               s.describle,
               s.status,
               s.create_time,
               s.update_time
        FROM shop s
                 LEFT JOIN shop_category sc ON s.id = sc.shop_id
                 LEFT JOIN category c ON c.id = sc.category_id
        where sc.category_id = #{id}
        ORDER BY s.id
        LIMIT #{pageNum},#{pageSize}
    </select>
    <select id="selectMyCount" resultType="java.lang.Integer">
        SELECT count(*)
        FROM shop s
        LEFT JOIN shop_category sc ON s.id = sc.shop_id
        <where>
            <if test="category_id != null and category_id != '' ">
                and sc.category_id = #{category_id}
            </if>
            and s.del_flag = 0
        </where>

    </select>
    <select id="sortShop" resultType="com.hang.vo.ShopExistTableVo">
        SELECT s.id,
        s.name,
        s.price,
        s.sales,
        s.inventory,
        s.image,
        s.star,
        c.name as categoryName,
        s.describle,
        s.status,
        s.create_time,
        s.update_time
        FROM shop s
            LEFT JOIN shop_category sc ON s.id = sc.shop_id
            LEFT JOIN category c ON c.id = sc.category_id
        where c.id = #{dto.categoryId}
            and s.price &gt;= #{dto.start}
            <if test="dto.end != null">
                and s.price &lt;= #{dto.end}
            </if>
            and s.del_flag = 0
        ORDER BY
        <choose>
            <when test="dto.sort == 0">
                 s.sales DESC
            </when>
            <when test="dto.sort == 1">
                 s.star DESC
            </when>
            <when test="dto.sort == 2">
                s.price DESC
            </when>
            <when test="dto.sort == 3">
                s.price ASC
            </when>
            <otherwise>
                s.create_time ASC
            </otherwise>
        </choose>


        LIMIT #{pageNum},#{pageSize}
    </select>
</mapper>